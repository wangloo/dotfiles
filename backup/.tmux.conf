# ==========================
#   Usage         
# ==========================

# 以下一些tmux命令. 命令输入窗口通过 `$prefix` and `:` 来呼出
# - 显示所有session:      :ls
# - 绑定到某个session:    :attach-session -t <session-id>
# - 杀死某个session:      :kill-session -t <session-id>

# 以下都是配合prefix的快捷操作方式
# - 切换session: prefix + s
# - 切换windows: prefix + <window number>
# - 切换pane
#   (1) prefix + 上下左右
#   (2) prefix + q, 输入pane号

# - 新建session:
# - 新建window:  prefix + c
# - 新建pane:    prefix + | (垂直分割)
#                prefix + - (水平分割)

# - 删除session
# - 删除window:
# - 删除pane:   
 

# ==========================
#   Change Log  
# ==========================
# 1. Change prefix key to C-a, easier to type, same to "screen" (x: qemu use it)
# 2. Change prefix key to C-x (x: GDB use it)
# 3. Change prefix key back to C-b eventually:)
# 2023/07/28: reorder and delete unused



# ==========================
#   General settings  
# ==========================
set -g renumber-windows on                         # 关掉某个窗口后，编号重排
setw -g automatic-rename off                       # 禁止自动命名新窗口
set -g default-terminal "screen-256color"
set -g history-limit 20000                         # 屏幕保存的历史条数
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g display-panes-time 3000                     # "C-a q" 选择窗口时提示信息的驻留时长
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g aggressive-resize on


# 设置控制命令前缀
unbind C-b
set -g prefix C-b

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
# !!! Disable as select text is annoying when mouse on
# set -g mouse on 



# ==========================
#   Key bindings  
# ==========================
# -r: repeatable
# -T: list only keys in key-table

# change to MRU window
bind Tab last-window           

# ceate new windows with current path
unbind c  
bind c new-window -c "#{pane_current_path}"   

# split window with current path
unbind %    # split-window -h
unbind '"'  # split-window
bind | split-window -h -c "#{pane_current_path}" 
bind _ split-window -v -c "#{pane_current_path}"

bind -r ^k resizep -U 4 # 绑定Ctrl+k为往↑调整面板边缘4个单元格
bind -r ^j resizep -D 4 # 绑定Ctrl+j为往↓调整面板边缘4个单元格
bind -r ^h resizep -L 4 # 绑定Ctrl+h为往←调整面板边缘4个单元格
bind -r ^l resizep -R 4 # 绑定Ctrl+l为往→调整面板边缘4个单元格

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration 
bind r source-file ~/.tmux.conf \; display "Config reload.."

# Switch mouse mode
bind C-m set-option -g mouse \; display-message 'Mouse #{?mouse,on,off}'


# Unbind default key bindings
# 有些用不到的功能真的会误触
unbind "\$" # rename-session
unbind ,    # rename-window
unbind '}'  # swap-pane -D
unbind '{'  # swap-pane -U
# unbind [    # paste-buffer
# unbind ]    
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind &    # kill-window
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left


# 弃用的或者不实用的一些binding配置
# 
# unbind z    # zoom-pane
# unbind =    # choose-buffer
# unbind "#"  # list-buffer 
# unbind o    # !!! to switch focus between panes

# bind -r [ select-pane -t :.-
# bind -r ] select-pane -t :.+
# bind -r C-o swap-pane -D

# Rename session and window
# bind r command-prompt -I "#{window_name}" "rename-window '%%'"
# bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
# bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
# bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down


# ====================================
#   Hooks
# ====================================

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'


# ====================================
#   Copy mode, scroll and clipboard 
# ====================================
# TODO
# bind [ copy-mode


# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


# =====================================
#   Appearence and status bar 
# ======================================
wg_battery="#{battery_icon_status} #{battery_percentage}"
wg_user_host="#[fg=$color_status_text]#(whoami)"
wg_date="#[fg=$color_status_text]%Y-%m-%d %T#[default]"

set -g status-interval 1 # 状态栏刷新时间
set -g status-position top # 状态栏位置
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知
set -g status-right "#{prefix_highlight}  #{sysstat_cpu} | #{sysstat_mem} | $wg_user_host | $wg_date $wg_battery"
# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

set -g status-fg yellow # 设置状态栏前景黄色
set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-left "#[bg=#FF661D] 🐶 #S " # 状态栏左侧内容
# set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态右边长度500

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色


# set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"


# ============================
# ===       Plugins        ===
# ============================

# Need install plugin manager first!
# * git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# * About INSTALL plugin: https://www.cnblogs.com/jumpspider/p/15968605.html
set -g @plugin 'tmux-plugins/tpm'                   # 插件管理
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-battery'          # 电池电量获取
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # 按prefix时高亮提示
set -g @plugin 'samoshkin/tmux-plugin-sysstat'      # CPU、内存等系统状态
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# Run all plugins' scripts
run '~/.tmux/plugins/tpm/tpm'


